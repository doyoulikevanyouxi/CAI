[vertex_shader]
#version 330 core
layout (location = 0) in vec4 vertex; // <vec2 pos, vec2 tex>
out vec2 TexCoords;

uniform mat4 projection;

void main()
{
    gl_Position = vec4(vertex.xy, 0.0, 1.0);
    TexCoords = vertex.zw;
}

//#version 330 core
//layout (location = 0) in vec3 aPos;   // 位置变量的属性位置值为 0 
//layout (location = 1) in vec3 aColor; // 颜色变量的属性位置值为 1
//
//out vec3 ourColor; // 向片段着色器输出一个颜色
//
//void main()
//{
//    gl_Position = vec4(aPos, 1.0);
//    ourColor = aColor; // 将ourColor设置为我们从顶点数据那里得到的输入颜色
//}

[fragment_shader]
in vec2 TexCoords;
out vec4 color;

uniform sampler2D text;

void main()
{   
 vec4 sampled = vec4(1.0, 1.0, 1.0, texture(text, TexCoords).r);
    color = vec4(1.0,0.0,0.0, 1.0) * sampled;
  
}
//#version 330 core
//out vec4 FragColor;  
//in vec3 ourColor;
//
//void main()
//{
//    FragColor = vec4(ourColor, 1.0);
//}